<?xml version="1.0" encoding="utf-8"?>
<rss version="2.0"
  xmlns:atom="http://www.w3.org/2005/Atom"
  xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Sand with the Wind</title>
    <link>http://paliysha.site/</link>
    <atom:link href="/rss2.xml" rel="self" type="application/rss+xml"/>
    
    <description>once sunny ten times freezing</description>
    <pubDate>Wed, 27 Jun 2018 10:11:55 GMT</pubDate>
    <generator>http://hexo.io/</generator>
    
    <item>
      <title>Cookie Basic Introduction</title>
      <link>http://paliysha.site/2018/04/27/Cookie-Basic-Introduction/</link>
      <guid>http://paliysha.site/2018/04/27/Cookie-Basic-Introduction/</guid>
      <pubDate>Fri, 27 Apr 2018 10:09:44 GMT</pubDate>
      <description>
      
        
        
          &lt;ol&gt;
&lt;li&gt;&lt;p&gt;服务器生成cookie，以键值对Set-Cookie:k1=v1;k2=v2[…][;expires=DATA][;domain=DOMAIN][;path=PATH][;secure]（注意secure仅用于https,只是一个key标记，没有value
        
      
      </description>
      
      <content:encoded><![CDATA[<ol><li><p>服务器生成cookie，以键值对Set-Cookie:k1=v1;k2=v2[…][;expires=DATA][;domain=DOMAIN][;path=PATH][;secure]（注意secure仅用于https,只是一个key标记，没有value值）发送给客户端，<br> 以便下次使用时服务器会认识客户端（同一个人），就不需要再次发送验证请求了（譬如登录）。</p></li><li><p>客户端保存上次从服务器获得的cookie, 下次请求就将其所需信息带上到header中给Server验证</p></li></ol><p>参考：<br><a href="https://www.cnblogs.com/zhujiabin/p/6207913.html" target="_blank" rel="noopener">https://www.cnblogs.com/zhujiabin/p/6207913.html</a><br><a href="http://www.360doc.com/content/17/0224/11/6695445_631622883.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/17/0224/11/6695445_631622883.shtml</a><br><a href="https://bbs.csdn.net/topics/391934186" target="_blank" rel="noopener">https://bbs.csdn.net/topics/391934186</a></p>]]></content:encoded>
      
      <comments>http://paliysha.site/2018/04/27/Cookie-Basic-Introduction/#disqus_thread</comments>
    </item>
    
    <item>
      <title>NodeJs and Hexo Theme</title>
      <link>http://paliysha.site/2018/04/27/NodeJs-and-Hexo-Theme/</link>
      <guid>http://paliysha.site/2018/04/27/NodeJs-and-Hexo-Theme/</guid>
      <pubDate>Fri, 27 Apr 2018 09:53:54 GMT</pubDate>
      <description>
      
        
        
          &lt;ol&gt;
&lt;li&gt;Nodejs: an open-source, cross-platform JavaScript run-time environment that executes JavaScript code server-side.&lt;/li&gt;
&lt;li&gt;Swig: A 
        
      
      </description>
      
      <content:encoded><![CDATA[<ol><li>Nodejs: an open-source, cross-platform JavaScript run-time environment that executes JavaScript code server-side.</li><li>Swig: A simple, powerful, and extendable JavaScript Template Engine<br>模板引擎：中间件，使用户界面与业务数据（内容）分离而产生的，生成特定格式的文档（如HTML）</li><li>Grulp: an open-source JavaScript toolkit, used as a streaming build system in front-end web development.<br>使用： <a href="https://www.cnblogs.com/Tom-yi/p/8036730.html" target="_blank" rel="noopener">https://www.cnblogs.com/Tom-yi/p/8036730.html</a></li></ol><ol><li><p>Deno js框架：</p><p>运行于v8, 使用了js/py/c/c++/js(deno1还用了golang)等语言，工具构建使用的是<em>depot_tools</em>，Ninja</p></li></ol><ol><li>ejs:<br>（写一个自己的主题）<a href="http://www.showonne.com/(http://www.showonne.com/2016/07/27/%E5%86%99%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84Hexo%E4%B8%BB%E9%A2%98/" target="_blank" rel="noopener">http://www.showonne.com/(http://www.showonne.com/2016/07/27/%E5%86%99%E4%B8%80%E4%B8%AA%E8%87%AA%E5%B7%B1%E7%9A%84Hexo%E4%B8%BB%E9%A2%98/</a>)<br>（如何写一个自己的主题）<a href="https://www.jianshu.com/p/a142eb105279" target="_blank" rel="noopener">https://www.jianshu.com/p/a142eb105279</a><br>（从零开始制作 Hexo 主题）<a href="http://www.ahonn.me/2016/12/15/create-a-hexo-theme-from-scratch/" target="_blank" rel="noopener">http://www.ahonn.me/2016/12/15/create-a-hexo-theme-from-scratch/</a><br>(美化NeXT主题)<a href="https://www.jianshu.com/p/f054333ac9e6" target="_blank" rel="noopener">https://www.jianshu.com/p/f054333ac9e6</a></li><li>swig（nodejs模板引擎）:(注意：与Simplified Wrapper and Interface Generator有所区别，指和c/c++跟任何脚本语言相集成。当你有一个C/C++代码库需要被多种语言调用时，这将是个非常不错的选择。<a href="http://wiki.jikexueyuan.com/project/interpy-zh/c_extensions/swig.html" target="_blank" rel="noopener">http://wiki.jikexueyuan.com/project/interpy-zh/c_extensions/swig.html</a>)<br>!!!(Hexo模板主题开发 入门念叨)<a href="http://www.zzfly.net/hexo-theme/" target="_blank" rel="noopener">http://www.zzfly.net/hexo-theme/</a><br>(Hexo 主题制作指南)<a href="http://www.360doc.com/content/16/0913/16/33651124_590545274.shtml" target="_blank" rel="noopener">http://www.360doc.com/content/16/0913/16/33651124_590545274.shtml</a></li><li>手动编写博客和样式：<br>(/index.html + Cayman theme )<a href="https://github.com/jasonlong/cayman-theme" target="_blank" rel="noopener">https://github.com/jasonlong/cayman-theme</a></li></ol><p>0-1. github pages(<a href="http://wiki.jikexueyuan.com/project/github-pages-basics/github-page.html" target="_blank" rel="noopener">http://wiki.jikexueyuan.com/project/github-pages-basics/github-page.html</a>)</p><p>GitHub Pages 是什么<br>GitHub Pages 是通过我们网站托管和发布的公开静态网页。</p><p>你可以通过 Automatic Page Generator 在线创建和发布 GitHub Pages。如果你更喜欢本地操作，你可以使用 Mac 或者 Windows 平台的 GitHub App，或者使用 命令行。</p><p>Pages 是通过 HTTP 服务的，不是 HTTPS，所以你不应该使用它处理敏感的事务，像发送密码或者信用卡号码。</p><p>警告：GitHub Pages 网站是在互联网上公开的，即使它们所在的库是私有的。如果你有敏感的数据在 Page 库，你应该在发布之前删除它。</p><p>想要获取更多信息，可以查看 Github Pages 网页，或者这里的 相关帮助文档。</p><p>0-2. 了解githubPages+hexo搭建博客的原理(<a href="https://blog.csdn.net/sunshine940326/article/details/57413678" target="_blank" rel="noopener">https://blog.csdn.net/sunshine940326/article/details/57413678</a>)</p>]]></content:encoded>
      
      <comments>http://paliysha.site/2018/04/27/NodeJs-and-Hexo-Theme/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Module Name means What on the MVP</title>
      <link>http://paliysha.site/2018/04/27/Module-Name-means-What-on-the-MVP/</link>
      <guid>http://paliysha.site/2018/04/27/Module-Name-means-What-on-the-MVP/</guid>
      <pubDate>Fri, 27 Apr 2018 09:37:25 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;presenter(发出命令态):  中间者-对接V和P&lt;/p&gt;
&lt;p&gt;​    操作(对数据的动作) + 修饰词(状态/时机/用户操作行为) + 宾语(UI组件)&lt;/p&gt;
&lt;p&gt;view(结果呈现态)：视图-响应用户行为，呈现对应结果画面&lt;/p&gt;
&lt;p&gt;​    操作(对
        
      
      </description>
      
      <content:encoded><![CDATA[<p>presenter(发出命令态):  中间者-对接V和P</p><p>​    操作(对数据的动作) + 修饰词(状态/时机/用户操作行为) + 宾语(UI组件)</p><p>view(结果呈现态)：视图-响应用户行为，呈现对应结果画面</p><p>​    操作(对数据的动作) + 结果(操作的结果)</p><p>​    或者，修饰词过去式(状态/时机/用户操作行为) + 宾语(UI组件)</p><p>​    或者，set/lay + 宾语(组件/数据对象&lt;常使用在init初始化时&gt;)</p><p>model(操作逻辑态): 处理员-分离出网络，磁盘等数据读写操作并提供接口将结果反馈给P层</p><p>​    操作(对数据的动作) + 宾语(某个数据实体/封装对象)+[from/on/by/ + 数据对象提供源]</p><p>延伸概念：</p><p>业务逻辑：<a href="http://www.cnblogs.com/zhaoxiaolei/archive/2012/04/06/2434112.html" target="_blank" rel="noopener">定义输入输出规则，走预定的流程</a></p><p>​    DAO :<a href="https://www.jianshu.com/p/798bac217046" target="_blank" rel="noopener">Data Access Objects</a>属于业务逻辑层，但是是指的专门访问数据的逻辑接口</p>]]></content:encoded>
      
      <comments>http://paliysha.site/2018/04/27/Module-Name-means-What-on-the-MVP/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Bounce View with Multi-gesture</title>
      <link>http://paliysha.site/2018/04/27/Bounce-View-with-Multi-gesture/</link>
      <guid>http://paliysha.site/2018/04/27/Bounce-View-with-Multi-gesture/</guid>
      <pubDate>Fri, 27 Apr 2018 09:16:53 GMT</pubDate>
      <description>
      
        
        
          &lt;p&gt;找了些demo，大都能实现回弹效果，但多手势可能部分不支持或者不够完善：&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;https://github.com/Mixiaoxiao/OverScroll-Everywhere&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;
        
      
      </description>
      
      <content:encoded><![CDATA[<p>找了些demo，大都能实现回弹效果，但多手势可能部分不支持或者不够完善：</p><p><a href="https://github.com/Mixiaoxiao/OverScroll-Everywhere" target="_blank" rel="noopener">OverScroll-Everywhere</a></p><p>​    回弹和惯性越界<br>    视图类类似果冻scrollscale<br>    支持多点multigesture</p><p><a href="https://github.com/dkzwm/SmoothRefreshLayout" target="_blank" rel="noopener">SmoothRefreshLayout</a><br>    视图类类似果冻scrollscale<br>    拉伸回弹overscroll<br>    手势刷新refresh<br>    不是通过多点触控实multigesture</p><p>[PullRefreshLayout][<a href="https://github.com/genius158/PullRefreshLayout" target="_blank" rel="noopener">https://github.com/genius158/PullRefreshLayout</a>]<br>    同SmoothRefreshLayout，但是是拦截了多点触控实现multigesture</p><p><a href="https://github.com/scwang90/SmartRefreshLayout" target="_blank" rel="noopener">SmartRefreshLayout</a><br>    同SmoothRefreshLayout，侧重刷新炫酷效果，可能不是通过多点触控实multigesture</p><p><a href="https://github.com/EverythingMe" target="_blank" rel="noopener">overscroll-decor和OverScrollView</a><br>    overscroll-decor所有视图的回弹&amp;不支持多点<br>    OverScrollView支持多点</p><p>OverScroll-Everywhere这个比较好用的，可以学习一下多手势事件流程，完！</p>]]></content:encoded>
      
      <comments>http://paliysha.site/2018/04/27/Bounce-View-with-Multi-gesture/#disqus_thread</comments>
    </item>
    
    <item>
      <title>Front-end &amp; Back-end Basic Introduction</title>
      <link>http://paliysha.site/2018/04/26/Front-end-Back-end-Basic-Introduction/</link>
      <guid>http://paliysha.site/2018/04/26/Front-end-Back-end-Basic-Introduction/</guid>
      <pubDate>Thu, 26 Apr 2018 02:25:47 GMT</pubDate>
      <description>
      
        
        
          &lt;h3 id=&quot;相关术语：&quot;&gt;&lt;a href=&quot;#相关术语：&quot; class=&quot;headerlink&quot; title=&quot;相关术语：&quot;&gt;&lt;/a&gt;相关术语：&lt;/h3&gt;&lt;p&gt;业务逻辑：&lt;br&gt;    定义输入输出规则，走预定的流程。&lt;br&gt;    DAO :（Data Access Obj
        
      
      </description>
      
      <content:encoded><![CDATA[<h3 id="相关术语："><a href="#相关术语：" class="headerlink" title="相关术语："></a>相关术语：</h3><p>业务逻辑：<br>    定义输入输出规则，走预定的流程。<br>    DAO :（Data Access Objects）属于业务逻辑层，但是是指的专门<strong>访问数据</strong>的逻辑接口</p><p>模板引擎：</p><p>​    中间件，使用户界面与业务数据（内容）分离而产生的，生成特定格式的文档（如HTML）</p><h3 id="前端："><a href="#前端：" class="headerlink" title="前端："></a>前端：</h3><ol><li>Nodejs: an open-source, cross-platform JavaScript run-time environment that executes JavaScript code server-side.</li><li>Swig: A simple, powerful, and extendable JavaScript Template Engine</li><li>Grulp: an open-source JavaScript toolkit, used as a streaming build system in front-end web development.<br><a href="https://www.cnblogs.com/Tom-yi/p/8036730.html" target="_blank" rel="noopener">使用介绍</a></li></ol><p>参考资料：</p><p><a href="http://www.cnblogs.com/zhaoxiaolei/archive/2012/04/06/2434112.html" target="_blank" rel="noopener">如何理解业务逻辑</a></p><p><a href="https://www.jianshu.com/p/798bac217046" target="_blank" rel="noopener">DAO层架构的小总结</a></p>]]></content:encoded>
      
      <comments>http://paliysha.site/2018/04/26/Front-end-Back-end-Basic-Introduction/#disqus_thread</comments>
    </item>
    
  </channel>
</rss>
